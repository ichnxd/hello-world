@inherits System.Web.Mvc.WebViewPage
@using System.Web.Mvc;
@{
    Layout = null;
}
@Html.JsMinify(@<text>
//<script>
    define(['app', 'baseModelHelper', 'AcctHelper'], function (app, BaseClass, AcctHelper) {
            
        var VC_HelpMaintenance = function(){};
        VC_HelpMaintenance.prototype = Object.create(BaseClass.prototype);

        VC_HelpMaintenance.prototype.Init = function (VC) {
            BaseClass.prototype.Init.call(this, VC);
            var _ = this;

            var FilesToUpLoad = [];
            var filesImgControl = [];

            var _Save = VC.Save;
            VC.Save = function () {
                if (FilesToUpLoad.length > 0) {
                    $.each(FilesToUpLoad, function (i, f) {
                        VC.$FilesToUpload.push({
                            parentPropertyName: 'Help_Details',
                            propertyName: 'ImageFile',
                            fileName: f.name,
                            file: f,
                            isImage: true,
                            ID_Ref: f.ID_Ref,
                            isSaveThumbnail: true
                            //isSaveThumbnail : true
                        });
                    });
                }
                _Save.call(VC);
            };

            console.log('init')
            VC.onContextMenuPreparing_Help_Details = function (e) {
                e.items.unshift({
                    text: "Update Image",
                    icon: "mdi mdi-menu",
                    //template: "contextItem",
                    onItemClick: function () {
                        VC.JSDataService.UploadFile({
                            height: 550,
                            accept: 'image/x-png,image/gif,image/jpeg',
                            closeOnConfirm: false
                        }).then(function (data) {
                            
                            if (data.files.length == 0) return;
                            data.component.hide();
                            //e.columnOption('Name', 'width', 100);
                            //
                            //
                            //
                            var Details = [];
                            console.log(data.files)
                            if(data.files.length > 0){
                                var f = data.files[0];
                                FilesToUpLoad.push(f);
                                VC.$scope.CurrentObject.Help_Details[e.rowIndex].ImageFile = f.name;

                                VC.$scope.CurrentObject.Help_Details[e.rowIndex].IsNewImage = true;
                            }
                        });
                    }
                });

                e.items.unshift({
                    text: "Remove Image",
                    icon: "mdi mdi-menu",
                    //template: "contextItem",
                    onItemClick: function () {
                        
                        VC.$scope.CurrentObject.Help_Details[e.rowIndex].ImageFile = null;
                        VC.GetGridEditor('Help_Details').refresh();
                    }
                });
            }


            VC.onGridInitialized_Help_Details = function (e) {
                e.option('onRowPrepared', function (r) {
                    if (r.rowType == 'data') {
                        r.rowElement.css({ height: 50 });
                    }
                });
                e.option('wordWrapEnabled', true);
                e.columnOption('ID', 'fixed', false);

                e.columnOption('Code', 'cellTemplate', function (container, options) {
                    var data = options.row.data;
                    if (data.ImageFile !== null) {
                        if (data.ID < 0 || data.IsNewImage == true) {
                            var Files = Enumerable.From(FilesToUpLoad).Where("$.name === '" + data.ImageFile + "'").ToArray();
                            
                            console.log('eee',Files)
                            if (data.IsImagaLoaded !== true) {
                                var ImgControl = $('<img class="dx-image-view" scr="" ></img>');
                                if (Files.length === 1) {
                                    var reader = new FileReader();
                                    reader.onload = function (f) {
                                        ImgControl.attr('src', f.target.result);
                                        data.IsImagaLoaded = true;
                                        filesImgControl.push({
                                            ID: data.ID,
                                            HtmlPreview: ImgControl
                                        });
                                    }
                                    Files[0].ID_Ref = data.ID;
                                    reader.readAsDataURL(Files[0]);
                                    container.html(ImgControl);
                                }
                            } else {
                                var Img = Enumerable.From(filesImgControl).Where('$.ID === ' + data.ID).ToArray()[0];
                                container.html(Img.HtmlPreview);
                                return;
                            }
                        } else {
                            if (data.IsImagaLoaded !== true) {
                                var ImgControl = $('<img class="dx-image-view" scr="" ></img>');
                                ImgControl.attr('src', data.ImageFile);
                                filesImgControl.push({
                                    ID: data.ID,
                                    HtmlPreview: ImgControl
                                });
                                container.html(ImgControl);
                            } else {
                                var Img = Enumerable.From(filesImgControl).Where('$.ID === ' + data.ID).ToArray()[0];
                                container.html(Img.HtmlPreview);
                                return;
                            }
                        }
                    }
                });

            }
        }

        return VC_HelpMaintenance;
    });
//</script>
</text> , false )